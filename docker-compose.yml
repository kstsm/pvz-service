version: '3.8'

services:
  pvz-service:
    build: .
    container_name: pvz-service
    ports:
      - "8080:8080"
    environment:
      SRV_PORT: "8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal

  db:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d pvz" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    ports:
      - "5432:5432"
    networks:
      - internal

  db_test:
    image: postgres:16-alpine
    container_name: postgres_test
    environment:
      POSTGRES_USER: "${TEST_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${TEST_POSTGRES_PASSWORD}"
      POSTGRES_DB: "${TEST_POSTGRES_DB}"
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test_user -d test_db" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    ports:
      - "5433:5432"
    networks:
      - internal

networks:
  internal:
    driver: bridge